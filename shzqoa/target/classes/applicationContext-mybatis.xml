<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"      
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      
       xmlns:p="http://www.springframework.org/schema/p"      
       xmlns:mvc="http://www.springframework.org/schema/mvc"      
       xmlns:context="http://www.springframework.org/schema/context"      
       xmlns:util="http://www.springframework.org/schema/util"   
       xmlns:tx="http://www.springframework.org/schema/tx"   
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd      
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.1.xsd      
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd      
            http://www.springframework.org/schema/util   
            http://www.springframework.org/schema/util/spring-util-4.1.xsd
            http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd"> 
            
	<context:property-placeholder location="classpath:mysql.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="url" 								value="${db.url}"></property>
			<property name="driverClassName" 					value="${db.driverClassName}"></property>
			<property name="username" 							value="${db.username}"></property>
			<property name="password" 							value="${db.password}"></property>
			<property name="filters" 							value="${db.filters}"></property>
			<property name="maxActive" 							value="${db.maxActive}"></property>
			<property name="maxWait" 							value="${db.maxWait}"></property>
			<property name="timeBetweenEvictionRunsMillis" 		value="${db.timeBetweenEvictionRunsMillis}"></property>
			<property name="minEvictableIdleTimeMillis" 		value="${db.minEvictableIdleTimeMillis}"></property>
			<property name="validationQuery" 					value="${db.validationQuery}"></property>
			<property name="testWhileIdle" 						value="${db.testWhileIdle}"></property>
			<property name="testOnBorrow" 						value="${db.testOnBorrow}"></property>
			<property name="testOnReturn" 						value="${db.testOnReturn}"></property>
			<property name="poolPreparedStatements" 			value="${db.poolPreparedStatements}"></property>
			<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}"></property>
	</bean>
	
	<!-- spring和mybatis整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入连接信息 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 注入SQL定义的XML信息 -->
		<property name="mapperLocations" value="classpath:com/shzqoa/mapper/*.xml"></property>
	</bean>
	
	<!-- 扫描dao包下所有接口,批量生成dao实现类组件 -->
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shzqoa.dao"></property>
		<!-- 自动注入sqlsessionfactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlsessionfactory"></property>
	</bean>
	
	<!-- Spring事务注解配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>
	<context:component-scan base-package="com.shzqoa" >      
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
</beans>