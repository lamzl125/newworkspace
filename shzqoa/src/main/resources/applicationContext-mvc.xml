<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"      
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      
       xmlns:p="http://www.springframework.org/schema/p"      
       xmlns:mvc="http://www.springframework.org/schema/mvc"      
       xmlns:context="http://www.springframework.org/schema/context"      
       xmlns:util="http://www.springframework.org/schema/util"      
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd      
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.1.xsd      
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd      
            http://www.springframework.org/schema/util   
            http://www.springframework.org/schema/util/spring-util-4.1.xsd"> 
    
    <!-- 自动扫描该包，使用springmvc认为包下用了@controller注解的类是控制器 -->        
	<context:component-scan base-package="com.shzqoa" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- 避免IE执行Ajax,反回json出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
      <property name="prefixJson" value="false"/>  
      <property name="supportedMediaTypes">  
          <list>  
            <value>application/json;charset=UTF-8</value>  
            <value>text/json;charset=UTF-8</value>  
          </list>  
       </property>  
     </bean>
     
     <!-- 启动springmvc注解功能，完成请求和注解POJO的映射 -->
     
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean id="stringHttpMessageConverter"
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean id="jsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
		      <property name="prefixJson" value="false"/>  
		      <property name="supportedMediaTypes">  
		          <list>  
		            <value>application/json;charset=UTF-8</value>  
		            <value>text/json;charset=UTF-8</value>  
		          </list>  
		       </property>  
       		</bean>
		</mvc:message-converters>
		</mvc:annotation-driven>
     
     <!-- 定义跳转文件的前后缀，师徒模式配置 -->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="10240000"></property>
		<property name="uploadTempDir" value="fileUpload/"></property>
	</bean>
	
	<!--配置拦截器, 多个拦截器,顺序执行 -->  
	<mvc:interceptors>    
	    <mvc:interceptor>    
<!--        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  mvc:exclude-mapping不拦截的url  -->
	        <mvc:mapping path="/**" />  
	        <mvc:mapping path="/*/**" /> 
	        <mvc:exclude-mapping path="/login/**"/> 
	        <mvc:exclude-mapping path="/uploadResume*"/>
	        <bean class="com.shzqoa.interceptor.CommonInterceptor"></bean>
	    </mvc:interceptor>  
<!-- 	    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法   -->
		<mvc:interceptor>    
	        <mvc:mapping path="/**" />  
	        <mvc:mapping path="/*/**" /> 
	        <bean class="com.shzqoa.interceptor.HttpReqeustDeviceInterceptor"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>  
	
</beans>