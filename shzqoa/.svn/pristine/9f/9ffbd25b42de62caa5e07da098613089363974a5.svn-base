<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shzqoa.dao.CustomerDemandMapper">
	<resultMap id="BaseResultMap" type="com.shzqoa.model.CustomerDemand">
		<id column="Id" property="id" jdbcType="VARCHAR" />
		<result column="CorpCode" property="corpcode" jdbcType="VARCHAR" />
		<result column="Technologydirection" property="technologydirection" jdbcType="VARCHAR" />
		<result column="Demandyears" property="demandyears" jdbcType="VARCHAR" />
		<result column="Education" property="education" jdbcType="VARCHAR" />
		<result column="Demandnumber" property="demandnumber" jdbcType="VARCHAR" />
		<result column="Specificrequirement" property="specificrequirement" jdbcType="VARCHAR" />
		<result column="Projecttype" property="projecttype" jdbcType="VARCHAR" />
		<result column="Projectlocation" property="projectlocation" jdbcType="VARCHAR" />
		<result column="Operationuser" property="operationuser" jdbcType="VARCHAR" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="Address" property="address" jdbcType="VARCHAR" />
		<result column="Importantlevel" property="importantlevel" jdbcType="INTEGER" />
		<result column="Addtime" property="addtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		Id,CorpCode,Technologydirection,Demandyears,Education,
		Demandnumber,Specificrequirement,Projecttype,Projectlocation,
		Operationuser,Remarks,State,Address,Importantlevel,Addtime
	</sql>
	<resultMap type="com.shzqoa.model.CustDemand" id="custdemand">
	<result column="gradename" property="gradename" jdbcType="VARCHAR" />
	<result column="AreaName" property="areaname" jdbcType="VARCHAR" />
	<result column="name" property="name" jdbcType="VARCHAR" />
	<result column="CorpName" property="corpname" jdbcType="VARCHAR"/>
	</resultMap>
	<insert id="insertCustomerDemand" parameterType="com.shzqoa.model.CustomerDemand" useGeneratedKeys="true" keyProperty="id">
	insert into customerdemand
	  <trim prefix="(" suffix=")" suffixOverrides=",">
	     <if test="id != null">Id,</if>
	     <if test="corpcode != null">CorpCode,</if>
	     <if test="technologydirection != null">Technologydirection,</if>
	     <if test="demandyears != null">Demandyears,</if> 
	     <if test="education != null">Education,</if>
	     <if test="demandnumber != null">Demandnumber,</if>
	     <if test="specificrequirement != null">Specificrequirement,</if>  
	     <if test="projecttype != null">Projecttype,</if>
	     <if test="projectlocation != null">Projectlocation,</if>
	     <if test="operationuser != null">Operationuser,</if>
	     <if test="remarks != null">Remarks,</if>
	     <if test="state != null">State,</if> 
	     <if test="address != null">Address,</if>
	     <if test="importantlevel != null">Importantlevel,</if>
	     <if test="addtime != null">Addtime,</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides=",">
		 <if test="id != null">#{id,jdbcType=VARCHAR},</if>
	     <if test="corpcode != null">#{corpcode,jdbcType=VARCHAR},</if>
	     <if test="technologydirection != null">#{technologydirection,jdbcType=VARCHAR},</if>
	     <if test="demandyears != null">#{demandyears,jdbcType=VARCHAR},</if>	     
	     <if test="education != null">#{education,jdbcType=VARCHAR},</if>
	     <if test="demandnumber != null">#{demandnumber,jdbcType=VARCHAR},</if>
	     <if test="specificrequirement != null">#{specificrequirement,jdbcType=VARCHAR},</if>	     
	     <if test="projecttype != null">#{projecttype,jdbcType=VARCHAR},</if>
	     <if test="projectlocation != null">#{projectlocation,jdbcType=VARCHAR},</if>
	     <if test="operationuser != null">#{operationuser,jdbcType=VARCHAR},</if>	     
	     <if test="remarks != null">#{remarks,jdbcType=VARCHAR},</if>
	     <if test="state != null">#{state,jdbcType=INTEGER},</if>
	     <if test="address != null">#{address,jdbcType=VARCHAR},</if>
	     <if test="importantlevel != null">#{importantlevel,jdbcType=INTEGER},</if>
	     <if test="addtime != null">#{addtime,jdbcType=TIMESTAMP},</if>
	  </trim>
	</insert>
	
	<insert id="insertCustomerDemandTrack" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
	insert into demandresumetrack
	  <trim prefix="(" suffix=")" suffixOverrides=",">
	     <if test="id != null">Id,</if>
	     <if test="demandresumerelationid != null">DemandresumeRelationId,</if>
	     <if test="technologydirection != null">OperCode,</if>
	     <if test="opercode != null">OperCode,</if> 
	     OperTime,
	     <if test="trackresult != null">TrackResult,</if>
	     <if test="remark != null">Remark,</if>  
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides=",">
		 <if test="id != null">#{id},</if>
	     <if test="demandresumerelationid != null">#{demandresumerelationid},</if>
	     <if test="opercode != null">#{opercode},</if>
	     Now(),   
	     <if test="trackresult != null">#{trackresult},</if>
	     <if test="remark != null">#{remark},</if>
	  </trim>
	</insert>
	<select id="queryXQByParams" resultType="map" parameterType="map">
		select c.Technologydirection, c.Projectlocation,c.Demandyears,p.`name`, a.AreaName, g.gradename, sum(c.Demandnumber) peoplesum 
		from customerdemand c join profession p join areas a join grade g 
		on c.Technologydirection = p.id and c.Projectlocation = a.AreaId and c.Demandyears = g.id 
		where 1=1 and c.State=0 
		<if test="professionid != null and professionid != ''">
			and c.Technologydirection = #{professionid,jdbcType=VARCHAR} 
		</if>
		<if test="areaid != null and areaid != ''">
			and c.Projectlocation = #{areaid,jdbcType=VARCHAR} 
		</if>
		<if test="gradeid != null and gradeid != ''">
			and c.Demandyears = #{gradeid,jdbcType=VARCHAR} 
		</if>
		GROUP BY c.Technologydirection, c.Projectlocation, c.Demandyears 
		limit #{offset},#{pageSize}
	</select>
	<select id="queryCountByParams" resultType="integer" parameterType="map">
		select count(0) 
		from (
			select p.`name`, a.AreaName, g.gradename, sum(c.Demandnumber) peoplesum 
			from customerdemand c join profession p join areas a join grade g 
			on c.Technologydirection = p.id and c.Projectlocation = a.AreaId and c.Demandyears = g.id 
			where 1=1 and c.State=0 
			<if test="professionid != null and professionid != ''">
				and c.Technologydirection = #{professionid,jdbcType=VARCHAR} 
			</if>
			<if test="areaid != null and areaid != ''">
				and c.Projectlocation = #{areaid,jdbcType=VARCHAR} 
			</if>
			<if test="gradeid != null and gradeid != ''">
				and c.Demandyears = #{gradeid,jdbcType=VARCHAR} 
			</if>
			GROUP BY c.Technologydirection, c.Projectlocation, c.Demandyears 
		) t
	</select>
	<select id="selectDemand" resultMap="custdemand" parameterType="java.util.Map" >
		SELECT  cc.Technologydirection,cc.Education,cc.Id,cc.State,gg.gradename AS gradename,ss.AreaName,pp.name AS name,
        cc.Demandnumber,cc.Specificrequirement,cc.Projecttype,cc.Projectlocation,cc.Remarks,co.CorpName,cc.Operationuser
            from customerdemand AS cc LEFT JOIN 
        demandresumerelation AS dd ON cc.Id=dd.Customerdemandid
 		LEFT JOIN customerinfo AS aa ON dd.Customercode=aa.CustomerCode  LEFT JOIN grade AS gg ON 
 		cc.Demandyears=gg.id LEFT JOIN areas AS ss ON ss.AreaId=cc.Projectlocation 
		LEFT JOIN profession AS pp ON pp.id=cc.Technologydirection LEFT JOIN corporatepartners AS co ON cc.CorpCode=co.CorpCode 
 		 where 1=1
		<if test="customername != null and customername !=''"><!-- 客户姓名 -->
			and  cc.CorpCode LIKE "%"#{customername}"%"   
		</if>
		<if test="technologydirection != null and technologydirection != ''">
			and cc.Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
		</if>
		<if test="projectlocation != null and projectlocation != ''">
			and cc.Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
		</if>
		<if test="demandyears != null and demandyears != ''">
			and cc.Demandyears = #{demandyears,jdbcType=VARCHAR} 
		</if> 
		<if test="ocode != null and ocode != ''">
			and cc.operationuser = #{ocode,jdbcType=VARCHAR} 
		</if> 
		order by cc.State
		limit #{start},#{pageSize}
	</select>
	<select id="selectDemandCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
		SELECT  count(0)  from customerdemand AS cc LEFT JOIN 
        demandresumerelation AS dd ON cc.Id=dd.Customerdemandid
 		LEFT JOIN customerinfo AS aa ON dd.Customercode=aa.CustomerCode  LEFT JOIN grade AS gg ON 
 		cc.Demandyears=gg.id LEFT JOIN areas AS ss ON ss.AreaId=cc.Projectlocation 
		LEFT JOIN profession AS pp ON pp.id=cc.Technologydirection 
 		 where 1=1 and cc.State=0
		<if test="customername != null and customername !=''"><!-- 客户姓名 -->
			and  aa.CustomerName LIKE "%"#{customername}"%"   
		</if>
		<if test="technologydirection != null and technologydirection != ''">
			and cc.Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
		</if>
		<if test="projectlocation != null and projectlocation != ''">
			and cc.Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
		</if>
		<if test="demandyears != null and demandyears != ''">
			and cc.Demandyears = #{demandyears,jdbcType=VARCHAR} 
		</if> 
	</select>
	<select id="selectAlldemand" resultMap="custdemand" parameterType="java.util.Map">
	select 
		aa.*,gg.gradename,ss.AreaName,pp.name AS name,co.CorpName as corpname   
		from customerdemand  AS aa LEFT JOIN grade AS gg ON aa.Demandyears=gg.id 
		 LEFT JOIN areas AS ss ON ss.AreaId=aa.Projectlocation 
		LEFT JOIN profession AS pp ON pp.id=aa.Technologydirection  LEFT JOIN corporatepartners AS co ON co.CorpCode=aa.CorpCode 
		where 1=1 and State=0
		<if test="technologydirection != null and technologydirection != ''">
			and  Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
		</if>
		<if test="projectlocation != null and projectlocation != ''">
			and  Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
		</if>
		<if test="demandyears != null and demandyears != ''">
			and  Demandyears = #{demandyears,jdbcType=VARCHAR} 
		</if> 
		limit #{start},#{pageSize}
	</select>
	<select id="selectAlldemandCount" resultType="java.lang.Integer" parameterType="java.util.Map">
	select
		count(0)
		from customerdemand  AS aa LEFT JOIN grade AS gg ON aa.Demandyears=gg.years 
		 LEFT JOIN areas AS ss ON ss.AreaId=aa.Projectlocation 
		LEFT JOIN profession AS pp ON pp.id=aa.Technologydirection 
		where 1=1 and State=0
		<if test="technologydirection != null and technologydirection != ''">
			and  Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
		</if>
		<if test="projectlocation != null and projectlocation != ''">
			and  Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
		</if>
		<if test="demandyears != null and demandyears != ''">
			and  Demandyears = #{demandyears,jdbcType=VARCHAR} 
		</if>
		<if test="corpcode != null and corpcode != ''">
			and  CorpCode = #{corpcode,jdbcType=VARCHAR} 
		</if>
		<if test="projecttype != null and projecttype != ''">
			and  Projecttype = #{projecttype,jdbcType=VARCHAR} 
		</if>   
	</select>
	<select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
	select
		count(0)
		from customerdemand  
		<if test="corpcode != null and corpcode != ''">
			and  CorpCode = #{corpcode,jdbcType=VARCHAR} 
		</if>
		<if test="technologydirection != null and technologydirection != ''">
			and  Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
		</if>
		<if test="demandyears != null and demandyears != ''">
			and  Demandyears = #{demandyears,jdbcType=VARCHAR} 
		</if> 
		<if test="projectlocation != null and projectlocation != ''">
			and  Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
		</if> 
			and  State =0
	</select>
	
	<delete id="deleteById" parameterType="java.lang.String">
	DELETE FROM customerdemand WHERE Id=#{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByCustomId" parameterType="java.lang.String">
	DELETE FROM demandresumerelation WHERE Customercode=#{customercode,jdbcType=VARCHAR}
	</delete>
	<update id="closeDemand" parameterType="java.lang.String">
		UPDATE customerdemand
		set State = 1
		where Id = #{demandid}
	</update>
	<update id="openDemand" parameterType="java.lang.String">
		UPDATE customerdemand
		set State = 0
		where Id = #{demandid}
	</update>
	<select id="queryCompanyDemand" resultType="java.util.Map" parameterType="java.util.Map">
		select p.CorpName corpName, c.Demandnumber demandnumber ,c.Specificrequirement specificrequirement
		from corporatepartners p left join customerdemand c 
		on c.CorpCode=p.CorpCode
		where 1=1 
		<if test="professionid != null and professionid != ''">
			and c.Technologydirection=#{professionid}
		</if>
		<if test="areaid != null and areaid != ''">
			and c.Projectlocation=#{areaid}
		</if>
		<if test="gradeid != null and gradeid != ''">
			and c.Demandyears=#{gradeid}
		</if>
		<if test="state != null and state != ''">
			and c.State=#{state}
		</if>
	</select>
	<select id="selectById" resultType="com.shzqoa.model.CustomerDemand" parameterType="java.lang.String">
	    select * from customerdemand where id=#{cdId}
	</select>
	<update id="updateCustomerDemand" parameterType="com.shzqoa.model.CustomerDemand">
	    update customerdemand set
	    CorpCode=#{corpcode},
	    Technologydirection=#{technologydirection},
	    Demandyears=#{demandyears},	     
	    Education=#{education},
	    Demandnumber=#{demandnumber},
	    Specificrequirement=#{specificrequirement},     
	    Projecttype=#{projecttype},
	    Projectlocation=#{projectlocation},
	    Operationuser=#{operationuser},	     
	    Remarks=#{remarks},
	    State=#{state},
	    Address=#{address},
	    Importantlevel=#{importantlevel}
	    where Id=#{id}
	</update>
	
	
    <select id="selectDemandTrack" parameterType="java.util.Map" statementType="CALLABLE"  
	  resultType="java.util.Map">  
	  {call SP_QueryData(#{opercode},#{start},#{pageSize})}  
	</select>  
	<select id="selectDemandTrackCount" resultType="integer" parameterType="map">
		select count(0) from demandresumerelation a
		LEFT JOIN customerinfo b 
		on a.Customercode = b.CustomerCode
		<if test="opercode != null and opercode != ''">
			where b.OpertCode = #{opercode}
		</if>
	</select>
	<select id="notClosedDemands" resultType="java.util.Map" parameterType="java.util.Map">
	select 
       co.CorpName,pp.`name`,ss.AreaName,gg.gradename,cd.Specificrequirement,cd.Remarks,cd.CorpCode,
        us.realName,cd.Id,cd.Projecttype
    from customerdemand  AS cd 
    LEFT JOIN corporatepartners AS co ON co.CorpCode=cd.CorpCode 
    LEFT JOIN grade AS gg ON gg.id = cd.Demandyears
	LEFT JOIN areas AS ss ON ss.AreaId=cd.Projectlocation 
	LEFT JOIN profession AS pp ON pp.id=cd.Technologydirection 
    LEFT JOIN userinfo as us on us.userCode = cd.Operationuser
	where State=0
	<if test="customername != null and customername !=''"><!-- 客户编号 -->
		and  cd.CorpCode = #{customername,jdbcType=VARCHAR}    
	</if>
	<if test="technologydirection != null and technologydirection != ''">
		and cd.Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
	</if>
	<if test="projectlocation != null and projectlocation != ''">
		and cd.Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
	</if>
	<if test="demandyears != null and demandyears != ''">
	    and cd.Demandyears = #{demandyears,jdbcType=VARCHAR} 
	</if> 
	<if test="ocode != null and ocode != ''">
	    and cd.Operationuser = #{ocode,jdbcType=VARCHAR} 
	</if> 
	limit #{start},#{pageSize}
	</select>
	<select id="notClosedDemandsCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    select 
        count(0)
    from customerdemand as cd
	where cd.State=0
	<if test="customername != null and customername !=''"><!-- 客户姓名 -->
		and  cd.CorpCode = #{customername,jdbcType=VARCHAR}  
	</if>
	<if test="technologydirection != null and technologydirection != ''">
		and cd.Technologydirection = #{technologydirection,jdbcType=VARCHAR} 
	</if>
	<if test="projectlocation != null and projectlocation != ''">
		and cd.Projectlocation = #{projectlocation,jdbcType=VARCHAR} 
	</if>
	<if test="demandyears != null and demandyears != ''">
	    and cd.Demandyears = #{demandyears,jdbcType=VARCHAR} 
	</if> 
	<if test="ocode != null and ocode != ''">
	    and cd.Operationuser = #{ocode,jdbcType=VARCHAR} 
	</if> 
	</select>
	
	<select id="getDemandDetail" resultType="java.util.Map" parameterType="java.lang.String">
	select 
       co.CorpName,pp.`name`,ss.AreaName,gg.gradename,cd.Education,cd.Demandnumber,cd.Projecttype,cd.Importantlevel,cd.Projectlocation,cd.Specificrequirement,cd.Remarks,
        us.realName,cd.Id,cd.CorpCode,cd.Address
    from customerdemand  AS cd 
    LEFT JOIN corporatepartners AS co ON co.CorpCode=cd.CorpCode 
    LEFT JOIN grade AS gg ON gg.id = cd.Demandyears
	LEFT JOIN areas AS ss ON ss.AreaId=cd.Projectlocation 
	LEFT JOIN profession AS pp ON pp.id=cd.Technologydirection 
    LEFT JOIN userinfo as us on us.userCode = cd.Operationuser
	where cd.Id = #{demandId,jdbcType=VARCHAR}
	</select>
	<select id="selectOpenDemand" resultMap="custdemand" parameterType="java.util.Map" >
		SELECT  cc.Technologydirection,cc.Education,cc.Id,cc.State,gg.gradename AS gradename,ss.AreaName,pp.name AS name,         
				cc.Demandnumber,cc.Specificrequirement,cc.Projecttype,cc.Projectlocation,cc.Remarks,co.CorpName,cc.Operationuser,cc.Corpcode    
        from customerdemand AS cc
		LEFT JOIN grade AS gg ON     cc.Demandyears=gg.id 
		LEFT JOIN areas AS ss ON ss.AreaId=cc.Projectlocation    
		LEFT JOIN profession AS pp ON pp.id=cc.Technologydirection 
		LEFT JOIN corporatepartners AS co ON cc.CorpCode=co.CorpCode  
 		where 1=1 
 		<if test="demandstatus != null">
			and cc.State  = #{demandstatus}
		</if>
		<if test="usercode != null and usercode != ''">
			and cc.Operationuser  = #{usercode}
		</if>
		<if test="corpcode != null and corpcode != ''">
			and cc.Corpcode  = #{corpcode}
		</if>
		<if test="technologydirection != null and technologydirection != ''">
			and cc.Technologydirection  = #{technologydirection}
		</if>
		<if test="areaid != null and areaid != ''">
			and ss.AreaId  = #{areaid}
		</if>
		<if test="demandyears != null and demandyears != ''">
			and cc.Demandyears  = #{demandyears}
		</if>
		<if test="ocode != null and ocode != ''">
			and cc.Operationuser  = #{ocode}
		</if>
		<if test="start != null">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="selectOpenDemandCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
		SELECT  count(0)  from customerdemand AS cc
		LEFT JOIN grade AS gg ON     cc.Demandyears=gg.id 
		LEFT JOIN areas AS ss ON ss.AreaId=cc.Projectlocation    
		LEFT JOIN profession AS pp ON pp.id=cc.Technologydirection 
		LEFT JOIN corporatepartners AS co ON cc.CorpCode=co.CorpCode  
 		where 1=1 
 		<if test="demandstatus != null">
			and cc.State  = #{demandstatus}
		</if>
		<if test="usercode != null and usercode != ''">
			and cc.Operationuser  = #{usercode}
		</if>
		<if test="corpcode != null and corpcode != ''">
			and cc.Corpcode  = #{corpcode}
		</if>
		<if test="technologydirection != null and technologydirection != ''">
			and cc.Technologydirection  = #{technologydirection}
		</if>
		<if test="areaid != null and areaid != ''">
			and ss.AreaId  = #{areaid}
		</if>
		<if test="demandyears != null and demandyears != ''">
			and cc.Demandyears  = #{demandyears}
		</if>
		<if test="ocode != null and ocode != ''">
			and cc.Operationuser  = #{ocode}
		</if>
	</select>
	<select id="selectSignDemandByUser" resultMap="custdemand" parameterType="java.util.Map" >
		SELECT  cc.Technologydirection,cc.Education,cc.Id,cc.State,gg.gradename AS gradename,ss.AreaName,pp.name AS name,         
				cc.Demandnumber,cc.Specificrequirement,cc.Projecttype,cc.Projectlocation,cc.Remarks,co.CorpName,cc.Operationuser,cc.Corpcode    
        from customerdemand AS cc 
		JOIN demandsign AS ds ON cc.Id=ds.DemandId
		LEFT JOIN grade AS gg ON     cc.Demandyears=gg.id 
		LEFT JOIN areas AS ss ON ss.AreaId=cc.Projectlocation    
		LEFT JOIN profession AS pp ON pp.id=cc.Technologydirection 
		LEFT JOIN corporatepartners AS co ON cc.CorpCode=co.CorpCode  
 		where 1=1 
 		<if test="demandstatus != null and demandstatus != ''">
			and cc.State  = #{demandstatus}
		</if>
		<if test="usercode != null and usercode != ''">
			and ds.userCode  = #{usercode}
		</if>
		limit #{start},#{pageSize}
	</select>
</mapper>